# Generated by Django 4.1.1 on 2022-11-15 13:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='BankBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('sortcode', models.CharField(max_length=6)),
                ('bank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Examiner.bank')),
            ],
        ),
        migrations.CreateModel(
            name='districtcsv',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EAD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.IntegerField(choices=[(0, 'SELECT GENDER'), (1, 'MALE'), (2, 'FEMALE')], default=0)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('UserName', models.CharField(max_length=50, null=True)),
                ('NRC', models.CharField(max_length=11, null=True)),
                ('cell_Number', models.CharField(max_length=10, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('Address', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Examiner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.IntegerField(choices=[(0, 'SELECT GENDER'), (1, 'MALE'), (2, 'FEMALE')], default=0)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('ExaminerCode', models.CharField(max_length=50, null=True, unique=True)),
                ('Address', models.CharField(max_length=500, null=True)),
                ('to_province', models.CharField(blank=True, choices=[('LUSAKA', 'LUSAKA'), ('COPPERBELT', 'COPPERBELT'), ('MONZE', 'MONZE'), ('KAPIRI', 'KAPIRI'), ('LIVINGSTONE', 'LIVINGSTONE'), ('CHOMA', 'CHOMA'), ('MWANDI', 'MWANDI'), ('LUNTE', 'LUNTE'), ('MWENSE', 'MWENSE'), ('KASENENGWA', 'KASENENGWA'), ('CHISAMBA', 'CHISAMBA'), ('CHIBOMBO', 'CHIBOMBO')], max_length=50, null=True)),
                ('AccountDetails', models.CharField(max_length=150, null=True)),
                ('NRC', models.CharField(max_length=11, null=True)),
                ('TPIN', models.CharField(max_length=10, null=True)),
                ('cell_Number', models.CharField(max_length=10, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=False)),
                ('availability', models.BooleanField(default=False)),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Examiner.bank')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Examiner.bankbranch')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjectCode', models.CharField(max_length=5, null=True)),
                ('subjectName', models.CharField(max_length=20, null=True)),
                ('subjectDescription', models.CharField(blank=True, max_length=50, null=True)),
                ('datecreated', models.DateField(auto_now=True)),
                ('dateupdated', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.IntegerField(choices=[(1, 'EAD'), (2, 'Staff'), (3, 'Examiner'), (4, 'ECZ-Staff')], default=1)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Examiner.province')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.IntegerField(choices=[(0, 'SELECT GENDER'), (1, 'MALE'), (2, 'FEMALE')], default=0)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('UserName', models.CharField(max_length=50, null=True)),
                ('NRC', models.CharField(max_length=11, null=True)),
                ('cell_Number', models.CharField(max_length=10, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('Address', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SchedulePay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LUSAKA', models.IntegerField()),
                ('COPPERBELT', models.IntegerField()),
                ('MONZE', models.IntegerField()),
                ('KAPIRI', models.IntegerField()),
                ('LIVINGSTONE', models.IntegerField()),
                ('CHOMA', models.IntegerField()),
                ('MWANDI', models.IntegerField()),
                ('LUNTE', models.IntegerField()),
                ('MWENSE', models.IntegerField()),
                ('KASENENGWA', models.IntegerField()),
                ('CHISAMBA', models.IntegerField()),
                ('CHIBOMBO', models.IntegerField()),
                ('FromDistrict', models.ForeignKey(blank=True, db_column='station', null=True, on_delete=django.db.models.deletion.SET_NULL, to='Examiner.station', to_field='name')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transport', models.FloatField(default=0.0)),
                ('daily_allowance', models.FloatField(default=0.0)),
                ('examiner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Examiner.examiner')),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_number', models.IntegerField(default=0)),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Examiner.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, null=True)),
                ('datecreated', models.DateField(auto_now=True)),
                ('dateupdated', models.DateField(auto_now=True)),
                ('msg', models.TextField(max_length=500, null=True)),
                ('StatusConfirm', models.IntegerField(default=0)),
                ('fromAddress', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Examiner.ead')),
                ('toAddress', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Examiner.examiner')),
            ],
        ),
        migrations.AddField(
            model_name='examiner',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='district', to='Examiner.station'),
        ),
        migrations.AddField(
            model_name='examiner',
            name='paper',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Examiner.paper'),
        ),
        migrations.AddField(
            model_name='examiner',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Examiner.position'),
        ),
        migrations.AddField(
            model_name='examiner',
            name='province',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Examiner.province'),
        ),
        migrations.AddField(
            model_name='examiner',
            name='session',
            field=models.ManyToManyField(to='Examiner.session'),
        ),
        migrations.AddField(
            model_name='examiner',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Examiner.subject'),
        ),
        migrations.AddField(
            model_name='examiner',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ECZStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('to_province', models.CharField(blank=True, choices=[('LUSAKA', 'LUSAKA'), ('COPPERBELT', 'COPPERBELT'), ('MONZE', 'MONZE'), ('KAPIRI', 'KAPIRI'), ('LIVINGSTONE', 'LIVINGSTONE'), ('CHOMA', 'CHOMA'), ('MWANDI', 'MWANDI'), ('LUNTE', 'LUNTE'), ('MWENSE', 'MWENSE'), ('KASENENGWA', 'KASENENGWA'), ('CHISAMBA', 'CHISAMBA'), ('CHIBOMBO', 'CHIBOMBO')], max_length=50, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='ead',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=50)),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Examiner.province')),
            ],
        ),
        migrations.CreateModel(
            name='comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('msg', models.TextField(max_length=255)),
                ('msg2', models.TextField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commentAuthor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('examiner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Examiner.examiner')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=1)),
                ('examiner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_examiner', to='Examiner.examiner')),
            ],
        ),
    ]
